[{"/Users/daphneleebeek/Projects/familie-ba-soknad/src/index.tsx":"1","/Users/daphneleebeek/Projects/familie-ba-soknad/src/App.tsx":"2","/Users/daphneleebeek/Projects/familie-ba-soknad/src/context/AppContext.ts":"3","/Users/daphneleebeek/Projects/familie-ba-soknad/src/Søknad.tsx":"4","/Users/daphneleebeek/Projects/familie-ba-soknad/src/context/axios.ts":"5","/Users/daphneleebeek/Projects/familie-ba-soknad/src/utils/person.ts":"6","/Users/daphneleebeek/Projects/familie-ba-soknad/src/utils/autentisering.ts":"7","/Users/daphneleebeek/Projects/familie-ba-soknad/src/typer/søknad.ts":"8","/Users/daphneleebeek/Projects/familie-ba-soknad/src/utils/visning.tsx":"9","/Users/daphneleebeek/Projects/familie-ba-soknad/src/routing/Routes.tsx":"10","/Users/daphneleebeek/Projects/familie-ba-soknad/src/components/Helse/Helse.tsx":"11","/Users/daphneleebeek/Projects/familie-ba-soknad/src/components/Forside/Forside.tsx":"12","/Users/daphneleebeek/Projects/familie-ba-soknad/src/components/Felleskomponenter/SystemetLaster/SystemetLaster.tsx":"13","/Users/daphneleebeek/Projects/familie-ba-soknad/src/Miljø.ts":"14","/Users/daphneleebeek/Projects/familie-ba-soknad/src/assets/VeilederSnakkeboble.tsx":"15","/Users/daphneleebeek/Projects/familie-ba-soknad/src/components/Felleskomponenter/Informasjonsbolk/Informasjonsbolk.tsx":"16","/Users/daphneleebeek/Projects/familie-ba-soknad/src/components/SøknadsSteg/3-VelgBarn/VelgBarn.tsx":"17","/Users/daphneleebeek/Projects/familie-ba-soknad/src/components/SøknadsSteg/5-Kvittering/Kvittering.tsx":"18","/Users/daphneleebeek/Projects/familie-ba-soknad/src/components/SøknadsSteg/2-Søknadstype/Søknadstype.tsx":"19","/Users/daphneleebeek/Projects/familie-ba-soknad/src/components/SøknadsSteg/4-Oppsummering/Oppsummering.tsx":"20","/Users/daphneleebeek/Projects/familie-ba-soknad/src/components/SøknadsSteg/1-OmDeg/OmDeg.tsx":"21","/Users/daphneleebeek/Projects/familie-ba-soknad/src/components/SøknadsSteg/4-Oppsummering/Oppsummeringsbolk.tsx":"22","/Users/daphneleebeek/Projects/familie-ba-soknad/src/components/SøknadsSteg/Steg/Steg.tsx":"23","/Users/daphneleebeek/Projects/familie-ba-soknad/src/components/SøknadsSteg/3-VelgBarn/Barnekort/Barnekort.tsx":"24","/Users/daphneleebeek/Projects/familie-ba-soknad/src/utils/hjelpefunksjoner.tsx":"25","/Users/daphneleebeek/Projects/familie-ba-soknad/src/components/Felleskomponenter/LenkeMedIkon/LenkeMedIkon.tsx":"26"},{"size":230,"mtime":1611057826896,"results":"27","hashOfConfig":"28"},{"size":634,"mtime":1611057826886,"results":"29","hashOfConfig":"28"},{"size":5937,"mtime":1611057826895,"results":"30","hashOfConfig":"28"},{"size":2371,"mtime":1611057826887,"results":"31","hashOfConfig":"28"},{"size":1729,"mtime":1611057826895,"results":"32","hashOfConfig":"28"},{"size":398,"mtime":1611057826900,"results":"33","hashOfConfig":"28"},{"size":772,"mtime":1611057826899,"results":"34","hashOfConfig":"28"},{"size":1260,"mtime":1611057826898,"results":"35","hashOfConfig":"28"},{"size":1261,"mtime":1611057826900,"results":"36","hashOfConfig":"28"},{"size":1925,"mtime":1611057826897,"results":"37","hashOfConfig":"28"},{"size":2673,"mtime":1611057826890,"results":"38","hashOfConfig":"28"},{"size":7768,"mtime":1611057826890,"results":"39","hashOfConfig":"28"},{"size":686,"mtime":1611057826889,"results":"40","hashOfConfig":"28"},{"size":742,"mtime":1611057826887,"results":"41","hashOfConfig":"28"},{"size":4095,"mtime":1611057826887,"results":"42","hashOfConfig":"28"},{"size":436,"mtime":1611057826889,"results":"43","hashOfConfig":"28"},{"size":886,"mtime":1611057826892,"results":"44","hashOfConfig":"28"},{"size":886,"mtime":1611057826893,"results":"45","hashOfConfig":"28"},{"size":1379,"mtime":1611057826891,"results":"46","hashOfConfig":"28"},{"size":1815,"mtime":1611057826892,"results":"47","hashOfConfig":"28"},{"size":746,"mtime":1611057826891,"results":"48","hashOfConfig":"28"},{"size":1166,"mtime":1611057826893,"results":"49","hashOfConfig":"28"},{"size":8582,"mtime":1611057826894,"results":"50","hashOfConfig":"28"},{"size":3301,"mtime":1611057826891,"results":"51","hashOfConfig":"28"},{"size":130,"mtime":1611057826899,"results":"52","hashOfConfig":"28"},{"size":476,"mtime":1611057826889,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1p9jo2n",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"/Users/daphneleebeek/Projects/familie-ba-soknad/src/index.tsx",[],["111","112"],"/Users/daphneleebeek/Projects/familie-ba-soknad/src/App.tsx",[],"/Users/daphneleebeek/Projects/familie-ba-soknad/src/context/AppContext.ts",["113"],"import createUseContext from 'constate';\n\nimport { preferredAxios, loggFeil, håndterApiRessurs } from './axios';\nimport { AxiosRequestConfig, AxiosResponse, AxiosError } from 'axios';\nimport {\n    Ressurs,\n    ApiRessurs,\n    byggTomRessurs,\n    byggHenterRessurs,\n    RessursStatus,\n} from '@navikt/familie-typer';\nimport { useState, useEffect } from 'react';\nimport { IPerson } from '../typer/person';\nimport { hentAlder } from '../utils/person';\nimport { autentiseringsInterceptor, InnloggetStatus } from '../utils/autentisering';\nimport { ISøknad, initialState } from '../typer/søknad';\nimport { formaterFnr } from '../utils/visning';\nimport { IKvittering } from '../typer/kvittering';\n\nconst [AppProvider, useApp] = createUseContext(() => {\n    const [sluttbruker, settSluttbruker] = useState(byggTomRessurs<IPerson>());\n    const [ressurserSomLaster, settRessurserSomLaster] = useState<string[]>([]);\n    const [innloggetStatus, settInnloggetStatus] = useState<InnloggetStatus>(\n        InnloggetStatus.IKKE_VERIFISERT\n    );\n    const [søknad, settSøknad] = useState<ISøknad>(initialState);\n    const [innsendingStatus, settInnsendingStatus] = useState(byggTomRessurs<IKvittering>());\n    const [utfyltSteg, settUtfyltSteg] = useState<number>(-1);\n\n    autentiseringsInterceptor();\n\n    useEffect(() => {\n        if (innloggetStatus === InnloggetStatus.IKKE_VERIFISERT) {\n            verifiserAtBrukerErAutentisert(settInnloggetStatus);\n        }\n        if (innloggetStatus === InnloggetStatus.AUTENTISERT) {\n            settSluttbruker(byggHenterRessurs());\n\n            axiosRequest<IPerson, void>({\n                url: '/api/personopplysning',\n                method: 'POST',\n                withCredentials: true,\n                påvirkerSystemLaster: true,\n            }).then(ressurs => {\n                settSluttbruker(ressurs);\n                nullstillSøknadsobjekt(ressurs);\n            });\n        }\n    }, [innloggetStatus]);\n\n    const axiosRequest = async <T, D>(\n        config: AxiosRequestConfig & { data?: D; påvirkerSystemLaster?: boolean }\n    ): Promise<Ressurs<T>> => {\n        const ressursId = `${config.method}_${config.url}`;\n        config.påvirkerSystemLaster && settRessurserSomLaster([...ressurserSomLaster, ressursId]);\n\n        return preferredAxios\n            .request(config)\n            .then((response: AxiosResponse<ApiRessurs<T>>) => {\n                const responsRessurs: ApiRessurs<T> = response.data;\n                config.påvirkerSystemLaster && fjernRessursSomLaster(ressursId);\n\n                return håndterApiRessurs(responsRessurs);\n            })\n            .catch((error: AxiosError) => {\n                config.påvirkerSystemLaster && fjernRessursSomLaster(ressursId);\n                loggFeil(error);\n\n                const responsRessurs: ApiRessurs<T> = error.response?.data;\n                return håndterApiRessurs(responsRessurs);\n            });\n    };\n\n    const fjernRessursSomLaster = (ressursId: string) => {\n        setTimeout(() => {\n            settRessurserSomLaster((prevState: string[]) => {\n                return prevState.filter((ressurs: string) => ressurs !== ressursId);\n            });\n        }, 300);\n    };\n\n    const systemetLaster = () => {\n        return ressurserSomLaster.length > 0 || innloggetStatus === InnloggetStatus.IKKE_VERIFISERT;\n    };\n\n    const systemetFeiler = () => {\n        return (\n            innloggetStatus === InnloggetStatus.FEILET ||\n            sluttbruker.status === RessursStatus.FEILET\n        );\n    };\n\n    const systemetOK = () => {\n        return (\n            innloggetStatus === InnloggetStatus.AUTENTISERT &&\n            sluttbruker.status === RessursStatus.SUKSESS\n        );\n    };\n\n    const verifiserAtBrukerErAutentisert = (\n        settInnloggetStatus: (innloggetStatus: InnloggetStatus) => void\n    ) => {\n        return axiosRequest({\n            url: '/api/innlogget',\n            method: 'GET',\n            withCredentials: true,\n            påvirkerSystemLaster: true,\n        })\n            .then(_ => {\n                settInnloggetStatus(InnloggetStatus.AUTENTISERT);\n            })\n            .catch(_ => settInnloggetStatus(InnloggetStatus.FEILET));\n    };\n\n    const nullstillSøknadsobjekt = (ressurs: Ressurs<IPerson>) => {\n        if (ressurs.status === RessursStatus.SUKSESS) {\n            const søker = {\n                navn: { label: 'Ditt navn', verdi: ressurs.data.navn },\n            };\n            const barn = ressurs.data.barn.map(barn => {\n                return {\n                    label: 'Barn',\n                    verdi: {\n                        navn: { label: 'Barnets navn', verdi: barn.navn },\n                        alder: { label: 'Alder', verdi: hentAlder(barn.fødselsdato) },\n                        ident: { label: 'Fødselsnummer', verdi: formaterFnr(barn.ident) },\n                        medISøknad: { label: 'Søker du for dette barnet?', verdi: true },\n                        borMedSøker: {\n                            label: 'Bor barnet på din adresse?',\n                            verdi: barn.borMedSøker\n                                ? 'Registrert på din adresse'\n                                : 'Ikke registrert på adressen din',\n                        },\n                    },\n                };\n            });\n            settSøknad({\n                ...initialState,\n                søker: { label: initialState.søker.label, verdi: søker },\n                barn: { label: initialState.barn.label, verdi: barn },\n            });\n        }\n    };\n\n    return {\n        axiosRequest,\n        sluttbruker,\n        søknad,\n        settSøknad,\n        systemetLaster,\n        innloggetStatus,\n        systemetFeiler,\n        systemetOK,\n        nullstillSøknadsobjekt,\n        innsendingStatus,\n        settInnsendingStatus,\n        utfyltSteg,\n        settUtfyltSteg,\n    };\n});\n\nexport { AppProvider, useApp };\n","/Users/daphneleebeek/Projects/familie-ba-soknad/src/Søknad.tsx",[],"/Users/daphneleebeek/Projects/familie-ba-soknad/src/context/axios.ts",[],"/Users/daphneleebeek/Projects/familie-ba-soknad/src/utils/person.ts",[],"/Users/daphneleebeek/Projects/familie-ba-soknad/src/utils/autentisering.ts",[],"/Users/daphneleebeek/Projects/familie-ba-soknad/src/typer/søknad.ts",[],"/Users/daphneleebeek/Projects/familie-ba-soknad/src/utils/visning.tsx",[],"/Users/daphneleebeek/Projects/familie-ba-soknad/src/routing/Routes.tsx",[],"/Users/daphneleebeek/Projects/familie-ba-soknad/src/components/Helse/Helse.tsx",["114"],"import React, { useState, useEffect } from 'react';\nimport { Undertittel, Normaltekst } from 'nav-frontend-typografi';\nimport { useApp } from '../../context/AppContext';\nimport {\n    Ressurs,\n    RessursStatus,\n    byggTomRessurs,\n    byggHenterRessurs,\n    byggFeiletRessurs,\n} from '@navikt/familie-typer';\nimport NavFrontendSpinner from 'nav-frontend-spinner';\n\nconst Helse: React.FC = () => {\n    const { axiosRequest } = useApp();\n\n    const [helseApi, settHelseApi] = useState(byggTomRessurs<string>());\n    const [helseMottak, settHelseMottak] = useState(byggTomRessurs<string>());\n    const [helsePdl, settHelsePdl] = useState(byggTomRessurs<string>());\n\n    useEffect(() => {\n        settHelseApi(byggHenterRessurs());\n        settHelseMottak(byggHenterRessurs());\n        settHelsePdl(byggHenterRessurs());\n\n        axiosRequest<string, void>({\n            url: '/api/helse/soknad-api',\n            method: 'GET',\n        })\n            .then(ressurs => {\n                settHelseApi(ressurs);\n            })\n            .catch(() => {\n                settHelseApi(byggFeiletRessurs('Helse mot backend feilet'));\n            });\n\n        axiosRequest<string, void>({\n            url: '/api/helse/mottak',\n            method: 'GET',\n        })\n            .then(ressurs => {\n                settHelseMottak(ressurs);\n            })\n            .catch(() => {\n                settHelseMottak(byggFeiletRessurs('Helse mot mottak feilet'));\n            });\n\n        axiosRequest<string, void>({\n            url: '/api/helse/pdl',\n            method: 'GET',\n        })\n            .then(ressurs => {\n                settHelsePdl(ressurs);\n            })\n            .catch(() => {\n                settHelsePdl(byggFeiletRessurs('Helse mot pdl feilet'));\n            });\n    }, []);\n\n    return (\n        <div className={'helse'}>\n            <Undertittel>Helse</Undertittel>\n            {renderHelse(helseApi, 'søknad api')}\n            {renderHelse(helseMottak, 'mottak')}\n            {renderHelse(helsePdl, 'pdl')}\n        </div>\n    );\n};\n\nconst renderHelse = (ressurs: Ressurs<string>, tjeneste: string) => {\n    return (\n        <div className={'helse__tjeneste'}>\n            <Normaltekst>{`Svar fra ${tjeneste}:`}</Normaltekst>\n            {ressurs.status === RessursStatus.SUKSESS && (\n                <Normaltekst children={`suksess (${ressurs.data})`} />\n            )}\n            {ressurs.status === RessursStatus.HENTER && <NavFrontendSpinner />}\n            {ressurs.status === RessursStatus.FEILET && (\n                <Normaltekst children={`feilet (${ressurs.frontendFeilmelding})`} />\n            )}\n        </div>\n    );\n};\n\nexport default Helse;\n","/Users/daphneleebeek/Projects/familie-ba-soknad/src/components/Forside/Forside.tsx",["115"],"import React, { useState, useEffect } from 'react';\nimport { Sidetittel, Systemtittel, Undertittel, Normaltekst } from 'nav-frontend-typografi';\nimport Tekstområde from 'nav-frontend-tekstomrade';\nimport { BekreftCheckboksPanel } from 'nav-frontend-skjema';\nimport Lenke from 'nav-frontend-lenker';\nimport { Hovedknapp } from 'nav-frontend-knapper';\nimport VeilederSnakkeboble from '../../assets/VeilederSnakkeboble';\nimport Panel from 'nav-frontend-paneler';\nimport Informasjonsbolk from '../Felleskomponenter/Informasjonsbolk/Informasjonsbolk';\nimport { useHistory } from 'react-router';\nimport { StegRoutes } from '../../routing/Routes';\nimport { useApp } from '../../context/AppContext';\nimport { RessursStatus } from '@navikt/familie-typer';\n\nconst Forside: React.FC = () => {\n    const [bekreftet, settBekreftet] = useState<boolean>(false);\n\n    const history = useHistory();\n\n    const { sluttbruker, nullstillSøknadsobjekt, settUtfyltSteg } = useApp();\n\n    const navn = sluttbruker.status === RessursStatus.SUKSESS ? sluttbruker.data.navn : '-';\n\n    const handleOnChange = () => {\n        settBekreftet(!bekreftet);\n    };\n\n    useEffect(() => {\n        nullstillSøknadsobjekt(sluttbruker);\n        settUtfyltSteg(0);\n    }, []);\n\n    return (\n        <div className={'forside'}>\n            <div className={'forside__innhold'}>\n                <Panel className={'forside__innhold--panel'}>\n                    <div className={'veileder'}>\n                        <VeilederSnakkeboble tekst={`Hei, ${navn}`} posisjon={'høyre'} />\n                    </div>\n\n                    <Informasjonsbolk tittel={<Sidetittel>Søknad om barnetrygd</Sidetittel>}>\n                        <Normaltekst>\n                            Hvis du har omsorg for barn under 18 år som bor hos deg i Norge, kan du\n                            ha rett på barnetrygd. Enslig mor eller far kan i tillegg få utvidet\n                            barnetrygd og småbarnstillegg.\n                            <br />\n                            <br />\n                            Hvis du er statsborger i et EU/ EØS-land og arbeider i Norge, kan du ha\n                            rett til barnetrygd selv om du skal være bosatt i Norge i mindre enn 12\n                            måneder.\n                        </Normaltekst>\n                        <Lenke href={'https://www.nav.no'}>Mer om barnetrygd</Lenke>\n                    </Informasjonsbolk>\n\n                    <Informasjonsbolk\n                        tittel={\n                            <Systemtittel>\n                                Det er viktig at du gir oss riktige opplysninger\n                            </Systemtittel>\n                        }\n                    >\n                        <Normaltekst>\n                            For at vi skal kunne behandle søknaden din, må du gi oss riktige\n                            opplysninger.\n                            <br />\n                            <br />\n                            Hvis du får barnetrygd, må du melde fra når det skjer viktige endringer\n                            i livet ditt, for eksempel bo-og familiesituasjonen eller arbeid og\n                            utdanning.\n                        </Normaltekst>\n                    </Informasjonsbolk>\n\n                    <Informasjonsbolk\n                        tittel={\n                            <Undertittel>Det kan hende du må sende inn dokumentasjon</Undertittel>\n                        }\n                    >\n                        <Normaltekst>\n                            Du får beskjed underveis i søknaden hvis du må dokumentere noen av\n                            opplysningene dine. Noen ganger kan vi også trenge mer informasjon. Da\n                            gir vi deg beskjed om dette.\n                        </Normaltekst>\n                        <Lenke href={`https://www.nav.no`}>\n                            Oversikt over hva som krever dokumentasjon\n                        </Lenke>\n                    </Informasjonsbolk>\n\n                    <Informasjonsbolk\n                        tittel={<Undertittel>Vi vil hente informasjon om deg</Undertittel>}\n                    >\n                        <Normaltekst>\n                            I tillegg til den informasjonen du oppgir i søknaden, henter vi inn\n                            informasjon om deg for å avgjøre om du har rett til stønad.\n                            <br />\n                            <br />\n                            Vi henter:\n                        </Normaltekst>\n                        <ul>\n                            <li>\n                                <Normaltekst>\n                                    <b>personinformasjon:</b> om deg, barnet/barna dine og den andre\n                                    forelderen til barna dine fra Folkeregisteret\n                                </Normaltekst>\n                            </li>\n                        </ul>\n                        <Normaltekst>\n                            Vi kan også bruke tidligere opplysninger du har gitt oss, eller\n                            opplysninger du gir oss i andre sammenhenger, hvis det er relevant og\n                            nødvendig.\n                        </Normaltekst>\n                        <Lenke href={`https://www.nav.no`}>\n                            Slik behandler vi personopplysningene dine\n                        </Lenke>\n                    </Informasjonsbolk>\n\n                    <Informasjonsbolk tittel={<Undertittel>Slik søker du</Undertittel>}>\n                        <Normaltekst>\n                            Vi lagrer søknaden din i x dager. Derfor kan du ta pauser når du fyller\n                            ut. Du kan også slette i disse x dagene.\n                            <br />\n                            <br />\n                            Mangler du dokumentasjon, kan du ettersende dette.\n                        </Normaltekst>\n                    </Informasjonsbolk>\n\n                    <div className={'bekreftelse'}>\n                        <Undertittel className={'bekreftelse__undertittel'}>\n                            Vi stoler på deg\n                        </Undertittel>\n\n                        <BekreftCheckboksPanel\n                            onChange={() => handleOnChange()}\n                            label={`Jeg, ${navn}, bekrefter at jeg vil gi riktige og fullstendige\\n\n         opplysninger`}\n                            checked={bekreftet}\n                        >\n                            {\n                                <Tekstområde className={'bekreftelse__tekstområde'}>\n                                    Jeg er klar over at jeg kan miste retten til barnetrygd dersom\n                                    jeg ikke har gitt riktige opplysninger. Jeg er også klar over at\n                                    jeg må betale tilbake dersom jeg får penger jeg ikke har rett\n                                    til og som skyldes at jeg har latt være å informere eller gitt\n                                    feil opplysninger.\n                                </Tekstområde>\n                            }\n                        </BekreftCheckboksPanel>\n                    </div>\n\n                    <div className={'hovedknapp'}>\n                        {bekreftet ? (\n                            <Hovedknapp\n                                onClick={() => history.push(Object.values(StegRoutes)[0].path)}\n                            >\n                                Start søknaden\n                            </Hovedknapp>\n                        ) : null}\n                    </div>\n                </Panel>\n            </div>\n        </div>\n    );\n};\n\nexport default Forside;\n","/Users/daphneleebeek/Projects/familie-ba-soknad/src/components/Felleskomponenter/SystemetLaster/SystemetLaster.tsx",[],"/Users/daphneleebeek/Projects/familie-ba-soknad/src/Miljø.ts",[],"/Users/daphneleebeek/Projects/familie-ba-soknad/src/assets/VeilederSnakkeboble.tsx",[],"/Users/daphneleebeek/Projects/familie-ba-soknad/src/components/Felleskomponenter/Informasjonsbolk/Informasjonsbolk.tsx",[],"/Users/daphneleebeek/Projects/familie-ba-soknad/src/components/SøknadsSteg/3-VelgBarn/VelgBarn.tsx",[],"/Users/daphneleebeek/Projects/familie-ba-soknad/src/components/SøknadsSteg/5-Kvittering/Kvittering.tsx",[],"/Users/daphneleebeek/Projects/familie-ba-soknad/src/components/SøknadsSteg/2-Søknadstype/Søknadstype.tsx",[],"/Users/daphneleebeek/Projects/familie-ba-soknad/src/components/SøknadsSteg/4-Oppsummering/Oppsummering.tsx",[],"/Users/daphneleebeek/Projects/familie-ba-soknad/src/components/SøknadsSteg/1-OmDeg/OmDeg.tsx",[],"/Users/daphneleebeek/Projects/familie-ba-soknad/src/components/SøknadsSteg/4-Oppsummering/Oppsummeringsbolk.tsx",[],"/Users/daphneleebeek/Projects/familie-ba-soknad/src/components/SøknadsSteg/Steg/Steg.tsx",["116"],"import React, { useEffect, useState } from 'react';\nimport './Steg.less';\nimport KnappBase from 'nav-frontend-knapper';\nimport Stegindikator from 'nav-frontend-stegindikator';\nimport Panel from 'nav-frontend-paneler';\nimport { StegRoutes, RouteEnum } from '../../../routing/Routes';\nimport { Systemtittel, Ingress } from 'nav-frontend-typografi';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { IStegRoute, hentNesteRoute, hentForrigeRoute, hentPath } from '../../../routing/Routes';\nimport { Hovedknapp } from 'nav-frontend-knapper';\nimport { ILokasjon } from '../../../typer/lokasjon';\nimport Miljø from '../../../Miljø';\nimport { useApp } from '../../../context/AppContext';\nimport { ISøknad, ISøknadsfelt, IBarn } from '../../../typer/søknad';\nimport { byggHenterRessurs, RessursStatus, byggFeiletRessurs } from '@navikt/familie-typer';\nimport { IKvittering } from '../../../typer/kvittering';\nimport classNames from 'classnames';\nimport Modal from 'nav-frontend-modal';\nimport { Undertittel, Normaltekst } from 'nav-frontend-typografi';\n\ninterface ISteg {\n    tittel: string;\n    erSpørsmålBesvart: boolean;\n    className?: string;\n}\n\nconst Steg: React.FC<ISteg> = ({ tittel, children, erSpørsmålBesvart, className }) => {\n    const history = useHistory();\n    const location = useLocation<ILokasjon>();\n    const {\n        søknad,\n        axiosRequest,\n        innsendingStatus,\n        settInnsendingStatus,\n        utfyltSteg,\n        settUtfyltSteg,\n    } = useApp();\n    const [aktivtSteg, settAktivtSteg] = useState<number>(0);\n\n    const kommerFraOppsummering = location.state?.kommerFraOppsummering;\n    const [åpenModal, settÅpenModal] = useState(false);\n\n    useEffect(() => {\n        const detteSteget = stegobjekter.findIndex(steg => steg.path === location.pathname);\n        settAktivtSteg(detteSteget);\n\n        if ((utfyltSteg === -1 ? 0 : utfyltSteg + 1) < detteSteget && !kommerFraOppsummering) {\n            history.push('/');\n        } else if (detteSteget > utfyltSteg) {\n            settUtfyltSteg(detteSteget);\n        }\n        window.scrollTo(0, 0);\n    }, [location.pathname]);\n\n    const stegobjekter = StegRoutes.map((steg: IStegRoute, index: number) => {\n        return {\n            ...steg,\n            index: index,\n        };\n    });\n\n    function behandleSøknad(søknad: ISøknad) {\n        return { ...søknad, barn: { ...søknad.barn, verdi: sorterBarn(søknad.barn.verdi) } };\n    }\n\n    function sorterBarn(barn: ISøknadsfelt<IBarn>[]) {\n        return barn.sort(barn => (barn.verdi.medISøknad.verdi ? -1 : 1));\n    }\n\n    function sendInnSøknad() {\n        if (innsendingStatus.status !== RessursStatus.HENTER) {\n            settInnsendingStatus(byggHenterRessurs());\n\n            axiosRequest<IKvittering, ISøknad>({\n                url: '/api/soknad',\n                method: 'POST',\n                withCredentials: true,\n                data: behandleSøknad(søknad),\n            })\n                .then(ressurs => {\n                    settInnsendingStatus(ressurs);\n                    if (ressurs.status === RessursStatus.SUKSESS) {\n                        settUtfyltSteg(utfyltSteg + 1);\n                        history.push({\n                            pathname: hentPath(StegRoutes, RouteEnum.Kvittering),\n                        });\n                    }\n                })\n                .catch(() =>\n                    settInnsendingStatus(byggFeiletRessurs('Innsending av søknad feilet'))\n                );\n        }\n    }\n\n    const erFørsteSteg: boolean = aktivtSteg === 0;\n    const erKvitteringSteg: boolean = aktivtSteg + 1 === stegobjekter.length;\n    const erOppsummeringSteg: boolean = aktivtSteg + 2 === stegobjekter.length;\n    const visInnsendingsknapp = Miljø().visInnsendingsknapp;\n\n    const nesteRoute: IStegRoute = hentNesteRoute(StegRoutes, location.pathname);\n    const forrigeRoute: IStegRoute = hentForrigeRoute(StegRoutes, location.pathname);\n\n    function håndterModalStatus() {\n        settÅpenModal(!åpenModal);\n    }\n\n    return (\n        <div className={classNames('steg', className)}>\n            <Ingress>Søknad om barnetrygd</Ingress>\n            <Stegindikator\n                autoResponsiv={true}\n                aktivtSteg={aktivtSteg}\n                steg={stegobjekter}\n                visLabel={false}\n            />\n            <Panel className={'steg__innhold'}>\n                <main className={'innholdscontainer'}>\n                    <Systemtittel>{tittel}</Systemtittel>\n                    <div className={'innholdscontainer__children'}>{children}</div>\n                </main>\n            </Panel>\n            {!kommerFraOppsummering && !erKvitteringSteg && (\n                <div className={'steg__knapper'}>\n                    <div className={`steg__knapper--rad1`}>\n                        {!erFørsteSteg && (\n                            <KnappBase\n                                className={'tilbake'}\n                                type={'standard'}\n                                onClick={() => {\n                                    history.push(forrigeRoute.path);\n                                }}\n                            >\n                                Tilbake\n                            </KnappBase>\n                        )}\n                        {erSpørsmålBesvart && !erOppsummeringSteg && (\n                            <KnappBase\n                                className={erFørsteSteg ? 'neste-alene' : 'neste'}\n                                type={'hoved'}\n                                onClick={() => {\n                                    history.push(nesteRoute.path);\n                                }}\n                            >\n                                Neste\n                            </KnappBase>\n                        )}\n                        {visInnsendingsknapp && erOppsummeringSteg && (\n                            <KnappBase\n                                spinner={innsendingStatus.status === RessursStatus.HENTER}\n                                type={'hoved'}\n                                className={'sendinn'}\n                                onClick={sendInnSøknad}\n                            >\n                                Send søknad\n                            </KnappBase>\n                        )}\n                    </div>\n\n                    <KnappBase\n                        className={'avbryt'}\n                        type={'flat'}\n                        onClick={() => håndterModalStatus()}\n                    >\n                        <div>Avbryt</div>\n                    </KnappBase>\n                </div>\n            )}\n            {kommerFraOppsummering && erSpørsmålBesvart && (\n                <div className={'steg__knapper'}>\n                    <Hovedknapp\n                        className=\"tilbake-til-oppsummering\"\n                        onClick={() =>\n                            history.push({\n                                pathname: hentPath(StegRoutes, RouteEnum.Oppsummering),\n                            })\n                        }\n                    >\n                        Tilbake til oppsummering\n                    </Hovedknapp>\n                </div>\n            )}\n            <Modal\n                className={'steg__modal'}\n                isOpen={åpenModal}\n                onRequestClose={() => håndterModalStatus()}\n                closeButton={true}\n                contentLabel=\"avbryt-søknad-modal\"\n                shouldCloseOnOverlayClick={true}\n            >\n                <div className={'modal-container'}>\n                    <div className={'informasjonsbolk'}>\n                        <Undertittel>\n                            Er du sikker på at du vil avbryte søknadprosessen?\n                        </Undertittel>\n                        <Normaltekst className={'modal-tekst'}>\n                            Hvis du avbryter vil innholdet i søknaden bli slettet.\n                        </Normaltekst>\n                    </div>\n                    <div className={'avslutt-knapp'}>\n                        <KnappBase\n                            type={'fare'}\n                            onClick={() => {\n                                settUtfyltSteg(0);\n                                history.push('/');\n                            }}\n                        >\n                            <div>Avbryt søknad</div>\n                        </KnappBase>\n                    </div>\n                </div>\n            </Modal>\n        </div>\n    );\n};\n\nexport default Steg;\n","/Users/daphneleebeek/Projects/familie-ba-soknad/src/components/SøknadsSteg/3-VelgBarn/Barnekort/Barnekort.tsx",[],"/Users/daphneleebeek/Projects/familie-ba-soknad/src/utils/hjelpefunksjoner.tsx",[],"/Users/daphneleebeek/Projects/familie-ba-soknad/src/components/Felleskomponenter/LenkeMedIkon/LenkeMedIkon.tsx",[],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":49,"column":8,"nodeType":"123","endLine":49,"endColumn":25,"suggestions":"124"},{"ruleId":"121","severity":1,"message":"125","line":57,"column":8,"nodeType":"123","endLine":57,"endColumn":10,"suggestions":"126"},{"ruleId":"121","severity":1,"message":"127","line":31,"column":8,"nodeType":"123","endLine":31,"endColumn":10,"suggestions":"128"},{"ruleId":"121","severity":1,"message":"129","line":53,"column":8,"nodeType":"123","endLine":53,"endColumn":27,"suggestions":"130"},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'axiosRequest' and 'verifiserAtBrukerErAutentisert'. Either include them or remove the dependency array.","ArrayExpression",["133"],"React Hook useEffect has a missing dependency: 'axiosRequest'. Either include it or remove the dependency array.",["134"],"React Hook useEffect has missing dependencies: 'nullstillSøknadsobjekt', 'settUtfyltSteg', and 'sluttbruker'. Either include them or remove the dependency array.",["135"],"React Hook useEffect has missing dependencies: 'history', 'kommerFraOppsummering', 'settUtfyltSteg', 'stegobjekter', and 'utfyltSteg'. Either include them or remove the dependency array.",["136"],"no-global-assign","no-unsafe-negation",{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},"Update the dependencies array to be: [axiosRequest, innloggetStatus, verifiserAtBrukerErAutentisert]",{"range":"145","text":"146"},"Update the dependencies array to be: [axiosRequest]",{"range":"147","text":"148"},"Update the dependencies array to be: [nullstillSøknadsobjekt, settUtfyltSteg, sluttbruker]",{"range":"149","text":"150"},"Update the dependencies array to be: [history, kommerFraOppsummering, location.pathname, settUtfyltSteg, stegobjekter, utfyltSteg]",{"range":"151","text":"152"},[1928,1945],"[axiosRequest, innloggetStatus, verifiserAtBrukerErAutentisert]",[1783,1785],"[axiosRequest]",[1235,1237],"[nullstillSøknadsobjekt, settUtfyltSteg, sluttbruker]",[2107,2126],"[history, kommerFraOppsummering, location.pathname, settUtfyltSteg, stegobjekter, utfyltSteg]"]